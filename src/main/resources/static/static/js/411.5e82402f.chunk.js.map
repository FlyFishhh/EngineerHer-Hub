{"version":3,"file":"static/js/411.5e82402f.chunk.js","mappings":"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","sources":["components/room-item/style.js","components/room-item/index.jsx","components/section-post/style.js","components/section-post/index.jsx","views/notifications/style.js","views/notifications/index.jsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const ItemWrapper = styled.div`\r\n  flex-shrink: 0;\r\n  box-sizing: border-box;\r\n  width: ${(props) => props.itemWidth};\r\n  padding: 8px;\r\n\r\n  .inner {\r\n    width: 100%;\r\n    display: flex;\r\n    gap: 15px;\r\n    .top {\r\n      display: flex;\r\n      height:40px;\r\n      flex-direction: column;\r\n      justify-content: space-between;\r\n    }\r\n    }\r\n    .name {\r\n      // height:20px;\r\n      // line-heightx;20px;\r\n    }\r\n    .time {\r\n      // height:20px;\r\n      // line-heightx;20px;\r\n    }\r\n  }\r\n  .comment-action {\r\n    padding-left: 8px;\r\n    cursor: 'auto';\r\n    font-size:16px;\r\n  }\r\n  \r\n  [class*='-col-rtl'] .comment-action {\r\n    padding-right: 8px;\r\n    padding-left: 0;\r\n    font-size:16px;\r\n    \r\n  }\r\n  .anticon-heart{\r\n    font-size:16px;\r\n  }\r\n  .anticon-message{\r\n    font-size:16px;\r\n  }\r\n  .anticon-tag{\r\n    font-size:16px;\r\n  }\r\n\r\n  .ant-list-items {\r\n    margin: 0;\r\n    padding: 0;\r\n    list-style: none;\r\n    background-color: #fff;\r\n    border-radius: 10px;\r\n}\r\n`;\r\n","import PropTypes from \"prop-types\";\r\nimport React, {\r\n  memo,\r\n  useContext,\r\n  useEffect,\r\n  useState,\r\n  useCallback,\r\n} from \"react\";\r\nimport { ItemWrapper } from \"./style\";\r\nimport {\r\n  DislikeFilled,\r\n  DislikeOutlined,\r\n  LikeFilled,\r\n  LikeOutlined,\r\n  HeartOutlined,\r\n  HeartFilled,\r\n  MessageOutlined,\r\n  MessageFilled,\r\n  TagOutlined,\r\n  TagFilled,\r\n  StarOutlined,\r\n} from \"@ant-design/icons\";\r\nimport {\r\n  Avatar,\r\n  Image,\r\n  Comment,\r\n  Tooltip,\r\n  List,\r\n  Divider,\r\n  Space,\r\n  message,\r\n} from \"antd\";\r\nimport { collectionAndlike } from \"@/services/modules/home\";\r\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\r\nimport { SearchContext } from \"@/SearchContext\";\r\nconst RoomItem = memo((props) => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const { searchTerm, handleSearchTermChange, handleProfile } =\r\n    useContext(SearchContext);\r\n\r\n  const { itemData, itemWidth = \"25%\" } = props;\r\n  const IconText = ({ icon, text }) => (\r\n    <Space>\r\n      {React.createElement(icon)}\r\n      {text}\r\n    </Space>\r\n  );\r\n  const handlelike = async (value) => {\r\n    if (localStorage.getItem(\"token\")) {\r\n      try {\r\n        let param = {\r\n          id: value.postId,\r\n          type: \"like\",\r\n        };\r\n        const res = await collectionAndlike(param);\r\n        if (res.code === 200) {\r\n          message.success(\"successful!\");\r\n          if (location.pathname === \"/home\") {\r\n            handleSearchTermChange(\"\");\r\n            navigate(\"/home\", { state: { value: \"\" } });\r\n          } else if (location.pathname === \"/profile\") {\r\n            handleProfile(\"\");\r\n            navigate(\"/profile/\", { state: { value: \"\" } });\r\n          } else {\r\n            handleProfile(\"\");\r\n            navigate(\"/profile/\" + value.userId, { state: { value: \"\" } });\r\n          }\r\n        }\r\n      } catch (error) {}\r\n    } else {\r\n      message.warning(\"Please log in first\");\r\n    }\r\n  };\r\n  const handlecollect = async (value) => {\r\n    if (localStorage.getItem(\"token\")) {\r\n      try {\r\n        let param = {\r\n          id: value.postId,\r\n          type: \"collection\",\r\n        };\r\n        const res = await collectionAndlike(param);\r\n        if (res.code === 200) {\r\n          message.success(\"successful!\");\r\n          if (location.pathname === \"/home\") {\r\n            handleSearchTermChange(\"\");\r\n            navigate(\"/home\", { state: { value: \"\" } });\r\n          } else if (location.pathname === \"/profile\") {\r\n            handleProfile(\"\");\r\n            navigate(\"/profile/\", { state: { value: \"\" } });\r\n          } else {\r\n            handleProfile(\"\");\r\n            navigate(\"/profile/\" + value.userId, { state: { value: \"\" } });\r\n          }\r\n        }\r\n      } catch (error) {}\r\n    } else {\r\n      message.warning(\"Please log in first\");\r\n    }\r\n  };\r\n\r\n  const goDetail = (id) => {\r\n    if (localStorage.getItem(\"token\")) {\r\n      navigate(`/detail/${id}`);\r\n    } else {\r\n      message.warning(\"Please log in first\");\r\n    }\r\n  };\r\n\r\n  const goUserInfo = (userId) => {\r\n    if (localStorage.getItem(\"token\")) {\r\n      navigate(`/profile/${userId}`);\r\n    } else {\r\n      message.warning(\"Please log in first\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ItemWrapper\r\n      verifyColor={itemData?.verify_info?.text_color || \"#39576a\"}\r\n      itemWidth={itemWidth}\r\n    >\r\n      <div className=\"inner\">\r\n        <div style={{ width: \"100%\" }}>\r\n          <List\r\n            itemLayout=\"vertical\"\r\n            size=\"large\"\r\n            dataSource={itemData}\r\n            renderItem={(item, index) => (\r\n              <List.Item\r\n                key={index}\r\n                actions={[\r\n                  <div onClick={() => handlelike(item)}>\r\n                    <IconText\r\n                      icon={item.likeFlag === \"1\" ? HeartFilled : HeartOutlined}\r\n                      text={item.likes}\r\n                      key=\"list-vertical-star-o\"\r\n                    />\r\n                  </div>,\r\n                  <IconText\r\n                    icon={MessageOutlined}\r\n                    text={item.comments}\r\n                    key=\"list-vertical-like-o\"\r\n                  />,\r\n                  <div onClick={() => handlecollect(item)}>\r\n                    <IconText\r\n                      icon={\r\n                        item.collectionFlag === \"1\" ? TagFilled : TagOutlined\r\n                      }\r\n                      text={item.collections}\r\n                      key=\"list-vertical-message\"\r\n                    />{\" \"}\r\n                  </div>,\r\n                ]}\r\n                // extra={\r\n                //   <div style={{ width: \"450px\" }}>\r\n                //     {item.images > 0 &&\r\n                //       item.images.map((item2, index) => {\r\n                //         return (\r\n                //           <Image\r\n                //             key={index}\r\n                //             width={150}\r\n                //             height={150}\r\n                //             src={item2}\r\n                //             preview={item2}\r\n                //           />\r\n                //         );\r\n                //       })}\r\n                //   </div>\r\n                // }\r\n              >\r\n                <List.Item.Meta\r\n                  // onClick={() => goDetail(item.postId)}\r\n                  avatar={\r\n                    // <Link to={`/profile/` + item.userId}>\r\n                    // {\" \"}\r\n                    <Avatar\r\n                      onClick={() => goUserInfo(item.userId)}\r\n                      size={58}\r\n                      src={item.imgUrl}\r\n                    />\r\n                    // </Link>\r\n                  }\r\n                  title={item.name}\r\n                  description={item.createTime}\r\n                />\r\n                <div>\r\n                  <div onClick={() => goDetail(item.postId)}>\r\n                    {\" \"}\r\n                    {item.content}\r\n                  </div>\r\n                  {(item.images.length>0) && (\r\n                    <div style={{ width: \"450px\", marginTop: \"20px\" }}>\r\n                      {item.images.map((item2, index) => {\r\n                        return (\r\n                          <Image\r\n                            key={index}\r\n                            width={150}\r\n                            height={150}\r\n                            src={item2}\r\n                            preview={item2}\r\n                          />\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </List.Item>\r\n            )}\r\n          />\r\n        </div>\r\n      </div>\r\n      <Divider />\r\n    </ItemWrapper>\r\n  );\r\n});\r\n\r\nRoomItem.propTypes = {\r\n  itemData: PropTypes.array,\r\n};\r\n\r\nexport default RoomItem;\r\n","import styled from \"styled-components\"\r\n\r\nexport const RoomsWrapper = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin: 0 -8px;\r\n`","import PropTypes from \"prop-types\";\r\nimport React, { memo } from \"react\";\r\n\r\nimport RoomItem from \"../room-item\";\r\nimport { RoomsWrapper } from \"./style\";\r\n\r\nconst SectionPosts = memo((props) => {\r\n  const { roomList, itemWidth } = props;\r\n  return (\r\n    <RoomsWrapper>\r\n      <RoomItem\r\n        itemData={roomList}\r\n        itemWidth={itemWidth}\r\n      />\r\n      ;\r\n    </RoomsWrapper>\r\n  );\r\n});\r\n\r\nSectionPosts.propTypes = {\r\n  roomList: PropTypes.array,\r\n};\r\n\r\nexport default SectionPosts;\r\n","import styled from \"styled-components\";\r\n\r\nexport const NotificationsWrapper = styled.div`\r\n  > .content {\r\n    width: 970px;\r\n    margin: 0 auto;\r\n\r\n    .dot {\r\n      display: inline-block;\r\n      background-color: red;\r\n      color: #fff;\r\n      font-size: 9px;\r\n      width: 20px;\r\n      height: 20px;\r\n      padding: 0px;\r\n      text-align: center;\r\n      line-height: 20px;\r\n      border-radius: 50%;\r\n      transform: translate(3px, -9px);\r\n    }\r\n\r\n    .item {\r\n      display: flex;\r\n      gap: 40px;\r\n      -webkit-box-align: center;\r\n      align-items: center;\r\n      margin-top: 10px;\r\n      border: 1px solid rgb(196 196 196);\r\n      padding: 10px;\r\n      border-radius: 10px;\r\n      background: #fff;\r\n\r\n      .contentbox {\r\n        display: flex;\r\n        flex-direction: column;\r\n        height: 55px;\r\n        width: 100%;\r\n        justify-content: space-around;\r\n      }\r\n\r\n      .top {\r\n        display: flex;\r\n        gap: 50px;\r\n        .time {\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { NotificationsWrapper } from \"./style\";\r\nimport { Tabs, Button, Avatar, Divider } from \"antd\";\r\nimport SectionPosts from \"@/components/section-post\";\r\nimport React, { memo, useEffect, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { notice, seeNotice } from \"@/services/modules/home\";\r\nconst Notifications = memo(() => {\r\n  const [dataInfo, setDataInfo] = useState([]);\r\n  const getInfo = async () => {\r\n    try {\r\n      let id = JSON.parse(localStorage.getItem(\"userInfo\")).id;\r\n      const res = await notice({ id: id });\r\n      if (res.code === 200) {\r\n        let datalist = [\r\n          {\r\n            name: \"Likes\",\r\n            num: res.data.likes,\r\n            list: res.data.likeList,\r\n          },\r\n          {\r\n            name: \"Bookmarks\",\r\n            num: res.data.collections,\r\n            list: res.data.collectionList,\r\n          },\r\n          {\r\n            name: \"New Followers\",\r\n            num: res.data.fans,\r\n            list: res.data.fanList,\r\n          },\r\n          {\r\n            name: \"Comments\",\r\n            num: res.data.comments,\r\n            list: res.data.commentList,\r\n          },\r\n        ];\r\n        setDataInfo(datalist);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  function tabChange(e) {\r\n    switch (e) {\r\n      case \"1\":\r\n        seeNotice({ type: \"like\" }).then((res) => {\r\n          if (res.code === 200) {\r\n            getInfo();\r\n          }\r\n        });\r\n        break;\r\n      case \"2\":\r\n        seeNotice({ type: \"collection\" }).then((res) => {\r\n          if (res.code === 200) {\r\n            getInfo();\r\n          }\r\n        });\r\n        break;\r\n      case \"3\":\r\n        seeNotice({ type: \"focus\" }).then((res) => {\r\n          if (res.code === 200) {\r\n            getInfo();\r\n          }\r\n        });\r\n        break;\r\n      case \"4\":\r\n        seeNotice({ type: \"comment\" }).then((res) => {\r\n          if (res.code === 200) {\r\n            getInfo();\r\n          }\r\n        });\r\n        break;\r\n      default:\r\n        console.log(\"5\");\r\n        break;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getInfo();\r\n  }, []);\r\n  return (\r\n    <NotificationsWrapper>\r\n      <div className=\"content\">\r\n        <div style={{ marginTop: 30 }}>\r\n          <Tabs\r\n            onChange={tabChange}\r\n            defaultActiveKey=\"2\"\r\n            items={dataInfo.map((item, i) => {\r\n              const id = String(i + 1);\r\n              return {\r\n                label: (\r\n                  <span>\r\n                    {item.name}\r\n                    {item.num > 0 && item.name !== \"Likes\" && (\r\n                      <span className=\"dot\">{item.num}</span>\r\n                    )}\r\n                  </span>\r\n                ),\r\n                key: id,\r\n                children: item.list.map((item2) => {\r\n                  return (\r\n                    <div className=\"item\">\r\n                      <div className=\"avatar\">\r\n                        <Link to={`/profile/` + item2.userId}>\r\n                          {\" \"}\r\n                          <Avatar size={55} src={item2.imgUrl} />\r\n                        </Link>\r\n                      </div>\r\n                      {item2.name === \"New Followers\" ? (\r\n                        <Link to={`/profile/` + item2.userId}>\r\n                          <div className=\"contentbox\">\r\n                            <div className=\"top\">\r\n                              <div className=\"name\">{item2.name}</div>\r\n                              <div className=\"time\">{item2.createTime}</div>\r\n                            </div>\r\n                            <div>{item2.content.substring(0, 30)}</div>\r\n                          </div>\r\n                        </Link>\r\n                      ) : (\r\n                        <Link to={`/detail/` + item2.postId}>\r\n                          <div className=\"contentbox\">\r\n                            <div className=\"top\">\r\n                              <div className=\"name\">{item2.name}</div>\r\n                              <div className=\"time\">{item2.createTime}</div>\r\n                            </div>\r\n                            <div>{item2.content.substring(0, 30)}</div>\r\n                          </div>\r\n                        </Link>\r\n                      )}\r\n                    </div>\r\n                  );\r\n                }),\r\n              };\r\n            })}\r\n          />\r\n        </div>\r\n      </div>\r\n    </NotificationsWrapper>\r\n  );\r\n});\r\n\r\nexport default Notifications;\r\n"],"names":["ItemWrapper","styled","div","_templateObject","_taggedTemplateLiteral","props","itemWidth","memo","_itemData$verify_info","navigate","useNavigate","location","useLocation","searchTerm","handleSearchTermChange","handleProfile","useContext","SearchContext","itemData","IconText","_ref","icon","text","_jsxs","Space","children","React","verifyColor","verify_info","text_color","_jsx","className","style","width","List","itemLayout","size","dataSource","renderItem","item","index","Item","actions","onClick","async","localStorage","getItem","param","id","value","postId","type","collectionAndlike","code","message","success","pathname","state","userId","error","warning","handlelike","likeFlag","HeartFilled","HeartOutlined","likes","MessageOutlined","comments","handlecollect","collectionFlag","TagFilled","TagOutlined","collections","Meta","avatar","Avatar","goUserInfo","concat","src","imgUrl","title","name","description","createTime","goDetail","content","images","length","marginTop","map","item2","Image","height","preview","Divider","RoomsWrapper","roomList","RoomItem","NotificationsWrapper","dataInfo","setDataInfo","useState","getInfo","JSON","parse","res","notice","datalist","num","data","list","likeList","collectionList","fans","fanList","commentList","console","log","useEffect","Tabs","onChange","e","seeNotice","then","defaultActiveKey","items","i","String","label","key","Link","to","substring"],"sourceRoot":""}