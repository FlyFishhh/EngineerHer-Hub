<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.student.techladies.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.student.techladies.model.User" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />

    <result column="img_url" property="imgUrl" jdbcType="VARCHAR" />

    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, name, email, password,  img_url, create_time,
    remark
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <include refid="Base_Column_List" />
    from df_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from df_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.student.techladies.model.User" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into df_user (id, name, email,
    password,  img_url,

    create_time, remark)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
    #{password,jdbcType=VARCHAR},  #{imgUrl,jdbcType=VARCHAR},
    #{createTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.student.techladies.model.User" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into df_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="password != null" >
        password,
      </if>


      <if test="imgUrl != null" >
        img_url,
      </if>

      <if test="createTime != null" >
        create_time,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>

      <if test="imgUrl != null" >
        #{imgUrl,jdbcType=VARCHAR},
      </if>

      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.student.techladies.model.User" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update df_user
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>

      <if test="imgUrl != null" >
        img_url = #{imgUrl,jdbcType=VARCHAR},
      </if>

      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.student.techladies.model.User" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update df_user
    set name = #{name,jdbcType=VARCHAR},
    email = #{email,jdbcType=VARCHAR},
    password = #{password,jdbcType=VARCHAR},

    img_url = #{imgUrl,jdbcType=VARCHAR},

    create_time = #{createTime,jdbcType=TIMESTAMP},
    remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByInfoByep" resultMap="BaseResultMap">
    select * from df_user where   email = #{email,jdbcType=VARCHAR} and
    password = #{password,jdbcType=VARCHAR} limit 1
  </select>

<select id="getFansOrfocus" resultMap="BaseResultMap">

    <if test="type=='focus'">
      select * from user where id in (
          select focus_id from foucus where user_id=#{id}
      )
    </if>
  <if test="type=='fans'">
    select * from user where id in (
    select fans_id from foucus where user_id=#{id}
    )
  </if>
</select>

  <select id="selectFocusListBy" resultMap="BaseResultMap">
    select u.id,u.name,u.img_url,f.create_time from df_user u join foucus f on u.id=f.user_id where f.focus_id=#{id} ORDER BY f.create_time  desc
  </select>

  <select id="selectFansListBy" resultMap="BaseResultMap">
    select u.id,u.name,u.img_url,f.create_time from df_user u join foucus f on u.id=f.focus_id where f.user_id=#{id} ORDER BY f.create_time  desc

  </select>

  <select id="selectPostListBy" resultMap="BaseResultMap">
        select * from post where user_id=#{id} order by id desc
  </select>

  <select id="selectCollectionListBy" resultType="com.student.techladies.common.PostResponse">
    select p.id as postId,p.user_id as userId,p.type as type,p.img_url imgUrl,c.create_time as createTime from post p join collection c on p.id=c.post_id where c.user_id=1 order by c.create_time desc
  </select>

  <select id="findUserByEmail" resultType="java.lang.Integer">
    select count(1) from df_user where email=#{email}
  </select>
</mapper>